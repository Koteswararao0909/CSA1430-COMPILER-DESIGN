#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#define MAX_EXPR_LENGTH 100
typedef struct {
    char expression[MAX_EXPR_LENGTH];
    char result[MAX_EXPR_LENGTH];
} Expression;
void eliminateCommonSubexpressions(Expression expressions[], int numExpressions) {
    for (int i = 0; i < numExpressions; i++) {
        for (int j = i + 1; j < numExpressions; j++) {
            if (strcmp(expressions[i].expression, expressions[j].expression) == 0) {
                strcpy(expressions[j].result, expressions[i].result);
            }
        }
    }
}
int main() {
    Expression expressions[] = {
        {"a + b", "t1"},
        {"c - d", "t2"},
        {"a + b", "t3"},
        {"e * f", "t4"},
        {"c - d", "t5"},
    };
    int numExpressions = sizeof(expressions) / sizeof(Expression);
    printf("Original Expressions:\n");
    for (int i = 0; i < numExpressions; i++) {
        printf("%s = %s\n", expressions[i].result, expressions[i].expression);
    }
    eliminateCommonSubexpressions(expressions, numExpressions);
    printf("\nExpressions after Common Subexpression Elimination:\n");
    for (int i = 0; i < numExpressions; i++) {
        printf("%s = %s\n", expressions[i].result, expressions[i].expression);
    }
    return 0;
}
